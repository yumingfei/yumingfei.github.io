<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>我的驾驶经验总结</title>
    <link href="undefinedlife-drive-my-drive-rules/"/>
    <url>life-drive-my-drive-rules/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>开了两年时间的车。<br>从一开始的谨慎到现在的洒脱；从找自己的问题到审视别人开车的方式；我不断在反省和修正自己开车的方法。<br>看了别人给的一些原则和意见，我也在此阶段性整理下我自己的，谈下自己的想法。</p><hr><h1 id="基本原则"><a href="#基本原则" class="headerlink" title="基本原则"></a>基本原则</h1><p>开车的目的是要安全、快速到达目的地，围绕这两个点，有以下基本条例需要注意：</p><h2 id="一、上车前"><a href="#一、上车前" class="headerlink" title="一、上车前"></a>一、上车前</h2><ul><li>绕车检查：小动物、小孩、异物，特别是人员密集地区</li><li>检查轮胎：是否漏气、鼓包（有胎压可以上车看）</li><li>检查车身：是否有未知损伤（被人刮擦要尽早发现）</li></ul><h2 id="二、启动前"><a href="#二、启动前" class="headerlink" title="二、启动前"></a>二、启动前</h2><ul><li><strong>油</strong>：是否足够</li><li>胎压：是否正常，无告警</li><li><strong>安全带</strong>：生命线，前后排都要</li><li><strong>座椅和后视镜</strong>：最适合你的状态</li><li>告警：是否有其它不熟悉的告警</li></ul><h2 id="三、起步"><a href="#三、起步" class="headerlink" title="三、起步"></a>三、起步</h2><ul><li><strong>打灯并仔细观察后方来车</strong>：打转向并通过后视镜观察是否具备上路条件。<br>一般来说，起步应该都是往左上路，除非你停车是逆向道路的。所以打上左转向以后，观察左后方是否有汽车、电动车、行人会跟你出去的路线重叠。</li><li>不要一次变两条道：尽量不要在从马路边起步的时候一次性跨两条道，除非道路空旷并且中间无实线。</li></ul><h2 id="四、直线行驶"><a href="#四、直线行驶" class="headerlink" title="四、直线行驶"></a>四、直线行驶</h2><ul><li><strong>不要长时间与其它车辆并行</strong>：在速度较快的时候，不要与身旁的车辆长时间并行，一旦发生意外会根本没时间处理，至少隔开两个车身位以上</li><li><strong>不要长时间占用最左侧车道</strong>：最左侧车道尽量保持畅通，否则其它车超车很麻烦，从而极易引发事故。</li><li><strong>行人出没路段注意控速</strong>：人行道、小路出口等无法判断是否会有行人出没的地方，务必要在自己可控的速度内。<u>视线不好的地方，只要不加速，右脚都要放在刹车上</u></li><li>不要压线行驶：不管是实线还是虚线，不要长时间压线行驶，否则出现事故大概率主责或者全责</li><li>变道打灯：尽量打灯提醒前后车</li><li>不要超速：限速地段注意速度</li><li>不要抢黄灯：虽然现在大部分地区都不会扣分，但是很容易发生事故</li></ul><h2 id="五、转弯"><a href="#五、转弯" class="headerlink" title="五、转弯"></a>五、转弯</h2><ul><li>左转转大弯：根据你所在车道，转弯时控制下左右车辆的距离。<br>这时候很容易发生刮擦，如果你在左转的最里边，很可能左后轮刮到路中间的花坛沿或者栅栏；如果你在左转的最外边，则最好先观察对向直行是否会跟你冲突，尽量让人家先走。</li><li>右转注意观察：一般右转的地方就是人行横道，务必左右观察，减速慢性，避免同向直行车辆挡住你的视线导致无法观察到行人或者横向直行的车辆。</li></ul><h2 id="六、变道与超车"><a href="#六、变道与超车" class="headerlink" title="六、变道与超车"></a>六、变道与超车</h2><ul><li><strong>变道打灯</strong>：变道前务必记得打灯，车流比较密集的时候变道不打灯是很被鄙视的</li><li><strong>左侧超车</strong>：原则上应该左侧超车（<u>但是道路情况复杂，实际会遇到不少需要右侧超车的情况，在此暂不讨论，没有特殊情况的时候尽量保证从左侧超车即可</u>）</li></ul><h2 id="七、其他"><a href="#七、其他" class="headerlink" title="七、其他"></a>七、其他</h2><ul><li><strong>会车关闭远光</strong>：不要在对向有车时一直打开远光，只有在前方或者对向均没有车时才一直开远光，否则对面会很难受，在漆黑路段特别容易发生撞到黑暗的东西的情况，非常危险。</li><li><strong>视线不要离开前方超过三秒</strong>：无论分心做什么别的事情，一定要在三秒内视线回到正前方。</li></ul><hr><h1 id="个人开车风格"><a href="#个人开车风格" class="headerlink" title="个人开车风格"></a>个人开车风格</h1><h2 id="一、市区路段"><a href="#一、市区路段" class="headerlink" title="一、市区路段"></a>一、市区路段</h2><ol><li>红绿灯快速起步：等红灯时靠前一点，可以看清楚人行横道的情况，只要确认安全，就快速起步赶在最前头；<u>如果无法确认安全，则跟在其它车旁慢慢走</u>，直至完全通过路口。</li><li>经过路口脚放刹车：经过路口时脚放到刹车上，绝不再踩油门，看情况适当刹车，但是视线很好，没有必要的话，也不用特意踩。</li></ol><h2 id="二、快速路段（高速、高架）"><a href="#二、快速路段（高速、高架）" class="headerlink" title="二、快速路段（高速、高架）"></a>二、快速路段（高速、高架）</h2><ol><li>匝道快速提速：在即将进入主路的地方快速把速度提到限速附近，然后只要不是后方有个超速的车子，基本都能很容易进入。比较麻烦的是前面有个车慢慢地并线，这种情况非常担心后方车速过快导致无法进入主路。</li><li>压着限速跑：基本上在限速附近，一般会适当高一点，不超过10%，这样很容易跟别的车拉开距离。只要我离别的车远一点，自我感觉就会安全一点。</li><li>快速超车：深踩油门，要在5-10s内完成超车，绝不能跟后侧大车并行超过10s。三环上经常看到一些车慢慢超大车，并行起码20s，我觉得这是非常危险的行为，不光是自己，还有后方比大车快的人。</li></ol><hr><h1 id="一些技巧"><a href="#一些技巧" class="headerlink" title="一些技巧"></a>一些技巧</h1><p>1.<strong>超车变道时机</strong>：后视镜注意观察，在可以看到后车前轮或者大灯的时候超车才安全，并且在此过程中务必保证速度不低于后车，避免因为前车异常原因需要刹车引起后车追尾。</p>]]></content>
    
    
    <categories>
      
      <category>life</category>
      
      <category>drive</category>
      
    </categories>
    
    
    <tags>
      
      <tag>驾驶</tag>
      
      <tag>drive</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一个linux系统重新调整root分区大小的自动化脚本</title>
    <link href="undefinedlinux-os-a-script-to-resize-root-partition-in-linux/"/>
    <url>linux-os-a-script-to-resize-root-partition-in-linux/</url>
    
    <content type="html"><![CDATA[<h1 id="一、进入其它系统挂载待调整的磁盘"><a href="#一、进入其它系统挂载待调整的磁盘" class="headerlink" title="一、进入其它系统挂载待调整的磁盘"></a>一、进入其它系统挂载待调整的磁盘</h1><p>调整磁盘时，需要保证对应磁盘无任何读写操作。<br>可以通过别的系统来重新调整这个磁盘而不影响数据。</p><p>1.使用系统安装光盘引导进入live系统<br>2.使用pxe引导进入网络文件系统<br>3.把磁盘拆到另外一个linux机器上</p><p>具体方法可以根据实际情况采用。</p><h1 id="二、做好重新调整分区前的准备工作"><a href="#二、做好重新调整分区前的准备工作" class="headerlink" title="二、做好重新调整分区前的准备工作"></a>二、做好重新调整分区前的准备工作</h1><h2 id="1-挂载分区"><a href="#1-挂载分区" class="headerlink" title="1.挂载分区"></a>1.挂载分区</h2><pre><code>...# create mount point {  mkdir -p /run/chroot  mkdir -p /run/chhome} &amp;&gt; /dev/null# mount exist partition{  mount /dev/sda1 /run/chroot/  mount /dev/sda6 /run/chhome/} &amp;&gt; /dev/null...</code></pre><h2 id="2-备份数据并卸载分区"><a href="#2-备份数据并卸载分区" class="headerlink" title="2.备份数据并卸载分区"></a>2.备份数据并卸载分区</h2><pre><code>...# backup /homecp -a /run/chhome/* /run/chroot/home/ &amp;&gt; /dev/nullsleep 10echo -e &quot;Done!&quot;# umount all partition{  umount -l /run/chroot  umount -l /run/chhome} &amp;&gt; /dev/null...</code></pre><h1 id="三、开始调整根分区"><a href="#三、开始调整根分区" class="headerlink" title="三、开始调整根分区"></a>三、开始调整根分区</h1><h2 id="1-释放分配过大的分区空间"><a href="#1-释放分配过大的分区空间" class="headerlink" title="1.释放分配过大的分区空间"></a>1.释放分配过大的分区空间</h2><p>磁盘空间使用ks安装的时候被home目录占用过多，需要还给root分区。<br>另外给root分区扩展的空间必须保证后面是连续的一段柱面，如下所示：</p><pre><code>--------------------------------------   调整为| root(20G) | swap(80G) | home(500G) |  ========&gt;---------------------------------------------------------------------------- | root(520G)             | swap(80G) | --------------------------------------</code></pre><p>因此需要先把swap和home分区全部删掉，备份操作已在上一步做过。</p><pre><code>...# delete extended partitionsecho -e &quot;\e[92m&gt;&gt;&gt;&gt;&gt; delete extended partitions... \e[0m&quot;echo -e &quot;\e[93mOriginal partition status: \e[0m&quot;parted -l /dev/sdaecho -e &quot;&gt;&gt;&gt;&gt;&gt;&gt; Starting...&quot;{  parted -s /dev/sda rm 6  sleep 1  parted -s /dev/sda rm 5  sleep 1  parted -s /dev/sda rm 2} &gt;&gt; /run/resizing.logecho -e &quot;\e[93mAfter operation partition status: \e[0m&quot;parted -l /dev/sda...</code></pre><h2 id="2-调整分区把空间分配给root"><a href="#2-调整分区把空间分配给root" class="headerlink" title="2.调整分区把空间分配给root"></a>2.调整分区把空间分配给root</h2><p>具体做法就是使用parted工具将90%的空间都分配给root。使用到的命令：</p><ul><li>resizepart(parted)</li><li>e2fsck</li><li>resize2fs</li></ul><pre><code>...# resize exist / partitionecho -e &quot;\e[92m&gt;&gt;&gt;&gt;&gt; Resizing exist root partition \e[0m&quot; echo -e &quot;\e[93mBefore Resizing: \e[0m&quot;parted -l /dev/sda1parted -s /dev/sda resizepart 1 90% &gt;&gt; /run/resizing.logsleep 5echo -e &quot;&gt;&gt;&gt;&gt;&gt;&gt; Starting...&quot;echo -e &quot;\e[93mAfter Resizing: \e[0m&quot;parted -l /dev/sda1echo -e &quot;\e[92m&gt;&gt;&gt;&gt;&gt; Execute Disk checking and correct error... \e[0m&quot;e2fsck -fp /dev/sda1 &amp;&gt; /dev/nullsleep 3echo -e &quot;Done!&quot;echo -e &quot;\e[92m&gt;&gt;&gt;&gt;&gt; Write back to system... \e[0m&quot;resize2fs -f /dev/sda1 &amp;&gt; /dev/nullecho -e &quot;Done!&quot;...</code></pre><h2 id="3-重新创建SWAP分区并更新UUID"><a href="#3-重新创建SWAP分区并更新UUID" class="headerlink" title="3.重新创建SWAP分区并更新UUID"></a>3.重新创建SWAP分区并更新UUID</h2><p>除了创建SWAP分区，还要更新一下root分区中的/etc/fstab文件。<br>里面记录了各个分区的UUID信息，这里主要做了这么两个工作：</p><ul><li>删除home条目</li><li>更新SWAP的UUID</li></ul><pre><code>...# create SWAPecho -e &quot;\e[92m&gt;&gt;&gt;&gt;&gt; Create new SWAP partition... \e[0m&quot;parted -s /dev/sda mkpartfs primary linux-swap 90% 98% &amp;&gt; /dev/nullmkfs.ext4 /dev/sda2 &amp;&gt; /dev/nullecho -e &quot;Done!&quot;# mount root partitionecho -e &quot;\e[92m&gt;&gt;&gt;&gt;&gt; Configurating SWAP Partition... \e[0m&quot;mount /dev/sda1 /run/chroot &amp;&gt; /dev/nullcat /run/chroot/etc/fstabblkid# get /etc/fstab SWAP UUIDSWAP_UUID=`cat /run/chroot/etc/fstab | grep -v &#39;^#&#39; | awk &#39;/swap/{ print $1 }&#39; | cut -d &quot;=&quot; -f2`sleep 3sed -i &#39;/home/d&#39; /run/chroot/etc/fstab &amp;&gt; /dev/null umount -l /runt/chroot &amp;&gt; /dev/nullecho -e &quot;Done!&quot;# change SWAP UUIDtune2fs -U $SWAP_UUID /dev/sda2 &amp;&gt; /dev/null# confirm UUID Changemount /dev/sda1 /run/chroot &amp;&gt; /dev/nullcat /run/chroot/etc/fstabblkidumount -l /runt/chroot &amp;&gt; /dev/null# Reboot System!...</code></pre><hr><p>完整脚本参考：</p><pre><code>#!/bin/bashclearecho -e &quot; \e[92m&gt;&gt;&gt;&gt;&gt; Start to Backup the exist /home... \e[0m&quot;# create mount point {  mkdir -p /run/chroot  mkdir -p /run/chhome} &amp;&gt; /dev/null# mount exist partition{  mount /dev/sda1 /run/chroot/  mount /dev/sda6 /run/chhome/} &amp;&gt; /dev/null# backup /homecp -a /run/chhome/* /run/chroot/home/ &amp;&gt; /dev/nullsleep 10echo -e &quot;Done!&quot;# umount all partition{  umount -l /run/chroot  umount -l /run/chhome} &amp;&gt; /dev/null# delete extended partitionsecho -e &quot;\e[92m&gt;&gt;&gt;&gt;&gt; delete extended partitions... \e[0m&quot;echo -e &quot;\e[93mOriginal partition status: \e[0m&quot;parted -l /dev/sdaecho -e &quot;&gt;&gt;&gt;&gt;&gt;&gt; Starting...&quot;{  parted -s /dev/sda rm 6  sleep 1  parted -s /dev/sda rm 5  sleep 1  parted -s /dev/sda rm 2} &gt;&gt; /run/resizing.logecho -e &quot;\e[93mAfter operation partition status: \e[0m&quot;parted -l /dev/sda# resize exist / partitionecho -e &quot;\e[92m&gt;&gt;&gt;&gt;&gt; Resizing exist root partition \e[0m&quot; echo -e &quot;\e[93mBefore Resizing: \e[0m&quot;parted -l /dev/sda1parted -s /dev/sda resizepart 1 90% &gt;&gt; /run/resizing.logsleep 5echo -e &quot;&gt;&gt;&gt;&gt;&gt;&gt; Starting...&quot;echo -e &quot;\e[93mAfter Resizing: \e[0m&quot;parted -l /dev/sda1echo -e &quot;\e[92m&gt;&gt;&gt;&gt;&gt; Execute Disk checking and correct error... \e[0m&quot;e2fsck -fp /dev/sda1 &amp;&gt; /dev/nullsleep 3echo -e &quot;Done!&quot;echo -e &quot;\e[92m&gt;&gt;&gt;&gt;&gt; Write back to system... \e[0m&quot;resize2fs -f /dev/sda1 &amp;&gt; /dev/nullecho -e &quot;Done!&quot;# create SWAPecho -e &quot;\e[92m&gt;&gt;&gt;&gt;&gt; Create new SWAP partition... \e[0m&quot;parted -s /dev/sda mkpartfs primary linux-swap 90% 98% &amp;&gt; /dev/nullmkfs.ext4 /dev/sda2 &amp;&gt; /dev/nullecho -e &quot;Done!&quot;# mount root partitionecho -e &quot;\e[92m&gt;&gt;&gt;&gt;&gt; Configurating SWAP Partition... \e[0m&quot;mount /dev/sda1 /run/chroot &amp;&gt; /dev/nullcat /run/chroot/etc/fstabblkid# get /etc/fstab SWAP UUIDSWAP_UUID=`cat /run/chroot/etc/fstab | grep -v &#39;^#&#39; | awk &#39;/swap/{ print $1 }&#39; | cut -d &quot;=&quot; -f2`sleep 3sed -i &#39;/home/d&#39; /run/chroot/etc/fstab &amp;&gt; /dev/null umount -l /runt/chroot &amp;&gt; /dev/nullecho -e &quot;Done!&quot;# change SWAP UUIDtune2fs -U $SWAP_UUID /dev/sda2 &amp;&gt; /dev/null# confirm UUID Changemount /dev/sda1 /run/chroot &amp;&gt; /dev/nullcat /run/chroot/etc/fstabblkidumount -l /runt/chroot &amp;&gt; /dev/null# Reboot System!parted -l /dev/sdaecho -e &quot;Finish!&quot;echo -e &quot;\e[93mPlease confirm the partition correct then manual reboot! \e[0m&quot;</code></pre>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
      <category>os</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>partition</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>破解电信光猫HG221G管理员账户信息</title>
    <link href="undefinedcs-network-telecom-epon-crack-telecomadmin-hg221g/"/>
    <url>cs-network-telecom-epon-crack-telecomadmin-hg221g/</url>
    
    <content type="html"><![CDATA[<h1 id="电信HG221G破解"><a href="#电信HG221G破解" class="headerlink" title="电信HG221G破解"></a>电信HG221G破解</h1><p>设备信息：</p><pre><code>设备类型：EPON上行e8-C家庭网关设备型号：HG221G</code></pre><h2 id="一、管理账户信息"><a href="#一、管理账户信息" class="headerlink" title="一、管理账户信息"></a>一、管理账户信息</h2><p>首先需要通过网线连接好设备，并且dhcp获取地址成功；这时候其实已经可以正常上网。</p><h3 id="1-先用普通账户登录一下useradmin-xxx"><a href="#1-先用普通账户登录一下useradmin-xxx" class="headerlink" title="1.先用普通账户登录一下useradmin/xxx"></a>1.先用普通账户登录一下useradmin/xxx</h3><p>这里的密码可以在设备背面找到。</p><h3 id="2-用浏览器打开以下链接"><a href="#2-用浏览器打开以下链接" class="headerlink" title="2.用浏览器打开以下链接"></a>2.用浏览器打开以下链接</h3><p><a href="http://192.168.1.1/backupsettings.conf" target="_blank" rel="noopener">http://192.168.1.1/backupsettings.conf</a><br>可以把文件下载下来，是个XML文件。</p><p>网上还说有一种，但是我的设备无法使用：<br><a href="http://192.168.1.1/cgi-bin/baseinfoSet.cgi" target="_blank" rel="noopener">http://192.168.1.1/cgi-bin/baseinfoSet.cgi</a></p><h3 id="3-查找关键词telecom或者password"><a href="#3-查找关键词telecom或者password" class="headerlink" title="3.查找关键词telecom或者password"></a>3.查找关键词telecom或者password</h3><p>可以在下载的xml文件里面找到加密或者明文的密码以及一些其它信息。<br>密码加密的话应该就是BASE64协议，用这个网站解析就可以：<br><a href="http://tool.chinaz.com/Tools/base64.aspx" target="_blank" rel="noopener">http://tool.chinaz.com/Tools/base64.aspx</a></p><h2 id="二、设置ipv6地址"><a href="#二、设置ipv6地址" class="headerlink" title="二、设置ipv6地址"></a>二、设置ipv6地址</h2><p>主要原理就是猫上面电信设置了好几种连接：</p><ul><li>TR069：电信管理网，删掉以后他们就不能主动控制你啦（没事不建议删除）</li><li>Internet：用于连接internet的，一般就是pppoe拨号</li><li>Other：桥接了一个vlan，电信拿来做itv的连接，我这里专门绑定了一个端口</li></ul><h3 id="1-使用telecomadmin账户登录"><a href="#1-使用telecomadmin账户登录" class="headerlink" title="1.使用telecomadmin账户登录"></a>1.使用telecomadmin账户登录</h3><h3 id="2-配置使用ipv4-amp-ipv6模式"><a href="#2-配置使用ipv4-amp-ipv6模式" class="headerlink" title="2.配置使用ipv4&amp;ipv6模式"></a>2.配置使用ipv4&amp;ipv6模式</h3><p>在【网络】-【internet连接】-【宽带设置】中，选择类似2_INTERNET_R_VID_1153这个internet的连接。<br> 修改协议模式为ipv4&amp;ipv6，地址分配机制和绑定端口根情况自己配置。</p><h3 id="3-查看ipv6信息"><a href="#3-查看ipv6信息" class="headerlink" title="3.查看ipv6信息"></a>3.查看ipv6信息</h3><p>在【状态】-【网络侧信息】-【ipv6连接信息】里面就可以看到获取的ipv6信息了。</p><h2 id="三、配置itv端口上网"><a href="#三、配置itv端口上网" class="headerlink" title="三、配置itv端口上网"></a>三、配置itv端口上网</h2><p>其实就是前面介绍的几种连接里面，Other模式专门绑定了一个端口。</p><h3 id="1-解绑itv端口"><a href="#1-解绑itv端口" class="headerlink" title="1.解绑itv端口"></a>1.解绑itv端口</h3><p>在【网络】-【宽带设置】里面选中3_Other_B_VID_1154这个，右下角删除。<br>（注意提前记录好相关信息，例如mtu、vlan号、模式等）  </p><h3 id="2-调整itv端口数量"><a href="#2-调整itv端口数量" class="headerlink" title="2.调整itv端口数量"></a>2.调整itv端口数量</h3><p>做法也很简单，在绑定端口那里多勾选几个。</p><hr><p>P.S. 参考来源</p><pre><code>1.https://www.cnblogs.com/seoshanghai/p/3513018.html</code></pre>]]></content>
    
    
    <categories>
      
      <category>cs</category>
      
      <category>network</category>
      
    </categories>
    
    
    <tags>
      
      <tag>电信光猫</tag>
      
      <tag>ipv6</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的ubuntu18桌面设置</title>
    <link href="undefinedlinux-ubuntu-desktop-my-ubuntu-desktop-1/"/>
    <url>linux-ubuntu-desktop-my-ubuntu-desktop-1/</url>
    
    <content type="html"><![CDATA[<h1 id="我使用的ubuntu18桌面设置"><a href="#我使用的ubuntu18桌面设置" class="headerlink" title="我使用的ubuntu18桌面设置"></a>我使用的ubuntu18桌面设置</h1><h2 id="一、安装包"><a href="#一、安装包" class="headerlink" title="一、安装包"></a>一、安装包</h2><h3 id="1-gnome-shell-extensions"><a href="#1-gnome-shell-extensions" class="headerlink" title="1.gnome-shell-extensions"></a>1.gnome-shell-extensions</h3><p>必须要的基础extension包，用于管理其它extensions，可以通过apt命令直接安装：</p><pre><code># apt install gnome-shell-extensions</code></pre><p>安装以后就可以在 <strong>tweak</strong> 中看到多了一个扩展项。</p><p><img src="/images/my-ubuntu-desktop-1.png" srcset="undefined" alt="tweak"></p><h3 id="2-Dash-to-dock"><a href="#2-Dash-to-dock" class="headerlink" title="2.Dash to dock"></a>2.Dash to dock</h3><p>可以通过ubuntu自带的 <strong>软件</strong> 工具，在 <strong>附加工具</strong> 中找到。</p><h3 id="3-Workspace-Indicator"><a href="#3-Workspace-Indicator" class="headerlink" title="3.Workspace Indicator"></a>3.Workspace Indicator</h3><p>同上</p><h3 id="4-搜狗输入法"><a href="#4-搜狗输入法" class="headerlink" title="4.搜狗输入法"></a>4.搜狗输入法</h3><p>ubuntu自带的输入法真的是急死人，还是装上搜狗敲得带劲。<br>可以去这里下载：<a href="https://pinyin.sogou.com/linux/?r=pinyin" target="_blank" rel="noopener">https://pinyin.sogou.com/linux/?r=pinyin</a></p><p> 1.先直接通过apt命令或者ubuntu软件安装</p><p> 2.在<strong>设置 -&gt; 区域与语言 -&gt; 管理已安装的语言</strong>中修改键盘输入法系统为fcitx</p><p><img src="/images/my-ubuntu-desktop-2.png" srcset="undefined" alt="设置fcitx"></p><p> 3.注销再进来就可以啦</p><h2 id="二、设置桌面"><a href="#二、设置桌面" class="headerlink" title="二、设置桌面"></a>二、设置桌面</h2><h3 id="1-打开User-Themes"><a href="#1-打开User-Themes" class="headerlink" title="1.打开User Themes"></a>1.打开User Themes</h3><p>这是用来管理主题的工具，打开以后就可以在<em>外观<em>、</em>字体</em> 等项目中找到一些额外的设置，对微调界面很有帮助。</p><h3 id="2-配置Dash-to-Dock"><a href="#2-配置Dash-to-Dock" class="headerlink" title="2. 配置Dash to Dock"></a>2. 配置Dash to Dock</h3><p>把左侧的应用程序栏设置成dock在底部显示，如果有窗口重叠则自动隐藏。<br>如图：<br><img src="/images/my-ubuntu-desktop-3.png" srcset="undefined" alt="设置dash-to-dock"></p><p>P.S. 桌面上就动了这些东西，其它工作设置随后再补</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
      <category>ubuntu</category>
      
      <category>desktop</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>ubuntu桌面</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>axios在OPTIONS请求时无authorization认证头</title>
    <link href="undefinedweb-axios-axios-authorization-not-matched-in-options/"/>
    <url>web-axios-axios-authorization-not-matched-in-options/</url>
    
    <content type="html"><![CDATA[<h1 id="axios在OPTIONS请求时无authorization认证头"><a href="#axios在OPTIONS请求时无authorization认证头" class="headerlink" title="axios在OPTIONS请求时无authorization认证头"></a>axios在OPTIONS请求时无authorization认证头</h1><h2 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h2><p>axios在进行跨域请求时，会自动先进行一次OPTIONS请求，OPTIONS获取到对应方法并通过以后，就会自动继续完成原来的请求，但是我这里完成OPTIONS以后就停止了。</p><p>检查Response的headers发现，返回的Access-Control-Allow-Headers中有Authorization，但是请求依然无法成功执行。</p><p>再检查Request的headers却发现，请求的头里面，希望匹配的却是authorization，开头字母为小写。</p><p>其实是后端用了*号来匹配头部，但是实际上它只能匹配标准的头部名称，例如Content-Type,Content-Length,Authorization,  Accept等。</p><p><img src="/images/axios-options-problem-1.png" srcset="undefined" alt="axios-options-problem"></p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>修改后台服务器设置Access-Control-Allow-Headers为：，强制包含一个authorization头即可。</p><pre><code>set_header(&#39;Access-Control-Allow-Headers&#39;, &#39;authorization,Authorization,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&#39;)</code></pre><p>修改位置有两种：</p><ol><li>提供虚拟主机服务的配置，例如nginx</li><li>提供业务服务的后台代码，如tornado，代码如上所示。</li></ol>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
      <category>axios</category>
      
    </categories>
    
    
    <tags>
      
      <tag>axios</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Win7上修改输入法的部分快捷键</title>
    <link href="undefinedwindows-system-operations-win7-change-inputmethod-hotkeys/"/>
    <url>windows-system-operations-win7-change-inputmethod-hotkeys/</url>
    
    <content type="html"><![CDATA[<p>系统上输入法会设置一些热键，例如：</p><ul><li>输入法切换；</li><li>全半角切换；</li><li>中英文标点符号切换；</li></ul><p>但修改这些快捷键时可能出现无法修改的情况（貌似win7才存在）。比如虽然设置成功但是重启系统又自动恢复成原来的快捷键。遇到这种情况可以通过修改注册表解决。</p><h3 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h3><p>打开注册表，定位到</p><pre><code>HKEY_CURRENT_USER\Control Panel\Input Method\Hot Keys</code></pre><p><img src="/images/win7hotkeys.png" srcset="undefined" alt="win7hostkeys"></p><p>其中00000010为输入法开关；00000011为全角半角切换；00000012为中英文标点切换。</p><h3 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h3><p>修改Key Modifiers项：</p><ul><li>第一位：01表示Alt，02表示Ctrl，04表示Shift</li><li>第二位：80表示左侧，40表示右侧，组合起来为c0表示左侧的按键都可以生效</li></ul><h3 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3"></a>Step 3</h3><p>注销或重启系统生效。</p>]]></content>
    
    
    <categories>
      
      <category>windows</category>
      
      <category>system</category>
      
      <category>operations</category>
      
    </categories>
    
    
    <tags>
      
      <tag>windows</tag>
      
      <tag>hotkeys</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>KVM使用hugepage大页内存</title>
    <link href="undefinedlinux-kvm-how-to-set-hugepages-in-kvm/"/>
    <url>linux-kvm-how-to-set-hugepages-in-kvm/</url>
    
    <content type="html"><![CDATA[<h3 id="一、操作系统设置hugepages"><a href="#一、操作系统设置hugepages" class="headerlink" title="一、操作系统设置hugepages"></a>一、操作系统设置hugepages</h3><p>Linux操作系统中需要配置启用hugepage。</p><p>1.挂载hugetlbfs文件系统</p><pre><code># mkdir /dev/hugepages# mount -t hugetlbfs hugetlbfs /dev/hugepages</code></pre><p>2.设置内核参数预留内存</p><pre><code># echo 1024 &gt; /proc/sys/vm/nr_hugepages或者通过sysctl设置：vm.nr_hugepages=1024</code></pre><p>预留得越多，执行以上命令花的时间就越长。</p><p>3.查看内存使用情况</p><pre><code># cat /proc/meminfo | grep HugeHugePages_Total:    1024HugePages_Free:     1024HugePages_Rsvd:        0HugePages_Surp:        0Hugepagesize:       2048 kBHugePages_Total: Hugepage的页面数量HugePages_Free: 剩余的页面数量HugePages_Rsvd: 被分配预留但是还没有使用的page数目HugePages_Surp：HugePages_Total减去/proc/sys/vm/nr_hugepages中的值Hugepagesize: 每单位数量大小，为2048或者10240</code></pre><p>使用Hugepages的内存页是不会被交换出去到磁盘的，永远常驻在内存中，所以也减少了内存页交换的额外开销。使用hugepage的内存不能被其他的进程使用，所以，一定要合理设置这个值，避免造成浪费。使用超过8G物理内存的系统，就可以考虑使用HugePage。</p><p> HugePages_Free - HugePages_Rsvd部分的内存是浪费的，且不能被其他程序使用。在实际应用中，尽可能让HugePages_Free - HugePages_Rsvd=0</p><h3 id="KVM虚拟机配置hugepages"><a href="#KVM虚拟机配置hugepages" class="headerlink" title="KVM虚拟机配置hugepages"></a>KVM虚拟机配置hugepages</h3><p>方法一：直接启动qemu添加-mem-path参数</p><pre><code>qemu-system-x86_64 -m 2048 -hda /mnt/rhel6.img -mem-path /dev/hugepages</code></pre><p>方法二：通过libvirt给虚拟机的domain字段添加配置配置</p><pre><code>&lt;memoryBacking&gt;&lt;hugepages/&gt;&lt;/memoryBacking&gt;</code></pre><p>libvirt启动虚拟机可能存在以下问题：</p><ol><li>启动虚拟机时无权限访问大页内存的目录<ul><li>问题原因：libvirt用来启动qemu进程的用户没有权限访问挂载的大页内存目录</li><li>解决办法：修改/etc/libvirt/qemu.conf，把user和group都改成root</li></ul></li></ol><p>参考：</p><p><a href="https://libvirt.org/formatdomain.html#elementsMemoryBacking" target="_blank" rel="noopener">https://libvirt.org/formatdomain.html#elementsMemoryBacking</a><br><a href="https://www.mjmwired.net/kernel/Documentation/vm/hugetlbpage.txt" target="_blank" rel="noopener">https://www.mjmwired.net/kernel/Documentation/vm/hugetlbpage.txt</a></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
      <category>kvm</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>kvm</tag>
      
      <tag>hugepage</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="undefinedhello-world/"/>
    <url>hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>