<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>axios发送options并返回以后未继续完成后续请求</title>
    <link href="undefinedweb-axios-axios-authorization-not-matched-in-options/"/>
    <url>web-axios-axios-authorization-not-matched-in-options/</url>
    
    <content type="html"><![CDATA[<h1 id="axios发送options并返回以后未继续完成后续请求"><a href="#axios发送options并返回以后未继续完成后续请求" class="headerlink" title="axios发送options并返回以后未继续完成后续请求"></a>axios发送options并返回以后未继续完成后续请求</h1><h2 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h2><p>axios在进行跨域请求时，会自动先进行一次OPTIONS请求，OPTIONS获取到对应方法并通过以后，就会自动继续完成原来的请求，但是我这里完成OPTIONS以后就停止了。</p><p>检查Response的headers发现，返回的Access-Control-Allow-Headers中有Authorization，但是请求依然无法成功执行。</p><p>再检查Request的headers却发现，请求的头里面，希望匹配的却是authorization，开头字母为小写。</p><p>其实是后端用了*号来匹配头部，但是实际上它只能匹配标准的头部名称，例如Content-Type,Content-Length,Authorization,  Accept等。</p><p><img src="/images/axios-options-problem-1.png" srcset="undefined" alt="axios-options-problem"></p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>修改后台服务器设置Access-Control-Allow-Headers为：，强制包含一个authorization头即可。</p><pre><code>set_header(&#39;Access-Control-Allow-Headers&#39;, &#39;authorization,Authorization,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&#39;)</code></pre><p>修改位置有两种：</p><ol><li>提供虚拟主机服务的配置，例如nginx</li><li>提供业务服务的后台代码，如tornado，代码如上所示。</li></ol>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
      <category>axios</category>
      
    </categories>
    
    
    <tags>
      
      <tag>axios</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Win7上修改输入法的部分快捷键</title>
    <link href="undefinedwindows-system-operations-win7-change-inputmethod-hotkeys/"/>
    <url>windows-system-operations-win7-change-inputmethod-hotkeys/</url>
    
    <content type="html"><![CDATA[<p>系统上输入法会设置一些热键，例如：</p><ul><li>输入法切换；</li><li>全半角切换；</li><li>中英文标点符号切换；</li></ul><p>但修改这些快捷键时可能出现无法修改的情况（貌似win7才存在）。比如虽然设置成功但是重启系统又自动恢复成原来的快捷键。遇到这种情况可以通过修改注册表解决。</p><h3 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h3><p>打开注册表，定位到</p><pre><code>HKEY_CURRENT_USER\Control Panel\Input Method\Hot Keys</code></pre><p><img src="/images/win7hotkeys.png" srcset="undefined" alt="win7hostkeys"></p><p>其中00000010为输入法开关；00000011为全角半角切换；00000012为中英文标点切换。</p><h3 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h3><p>修改Key Modifiers项：</p><ul><li>第一位：01表示Alt，02表示Ctrl，04表示Shift</li><li>第二位：80表示左侧，40表示右侧，组合起来为c0表示左侧的按键都可以生效</li></ul><h3 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3"></a>Step 3</h3><p>注销或重启系统生效。</p>]]></content>
    
    
    <categories>
      
      <category>windows</category>
      
      <category>system</category>
      
      <category>operations</category>
      
    </categories>
    
    
    <tags>
      
      <tag>windows</tag>
      
      <tag>hotkeys</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>KVM使用hugepage大页内存</title>
    <link href="undefinedlinux-kvm-how-to-set-hugepages-in-kvm/"/>
    <url>linux-kvm-how-to-set-hugepages-in-kvm/</url>
    
    <content type="html"><![CDATA[<h3 id="一、操作系统设置hugepages"><a href="#一、操作系统设置hugepages" class="headerlink" title="一、操作系统设置hugepages"></a>一、操作系统设置hugepages</h3><p>Linux操作系统中需要配置启用hugepage。</p><p>1.挂载hugetlbfs文件系统</p><pre><code># mkdir /dev/hugepages# mount -t hugetlbfs hugetlbfs /dev/hugepages</code></pre><p>2.设置内核参数预留内存</p><pre><code># echo 1024 &gt; /proc/sys/vm/nr_hugepages或者通过sysctl设置：vm.nr_hugepages=1024</code></pre><p>预留得越多，执行以上命令花的时间就越长。</p><p>3.查看内存使用情况</p><pre><code># cat /proc/meminfo | grep HugeHugePages_Total:    1024HugePages_Free:     1024HugePages_Rsvd:        0HugePages_Surp:        0Hugepagesize:       2048 kBHugePages_Total: Hugepage的页面数量HugePages_Free: 剩余的页面数量HugePages_Rsvd: 被分配预留但是还没有使用的page数目HugePages_Surp：HugePages_Total减去/proc/sys/vm/nr_hugepages中的值Hugepagesize: 每单位数量大小，为2048或者10240</code></pre><p>使用Hugepages的内存页是不会被交换出去到磁盘的，永远常驻在内存中，所以也减少了内存页交换的额外开销。使用hugepage的内存不能被其他的进程使用，所以，一定要合理设置这个值，避免造成浪费。使用超过8G物理内存的系统，就可以考虑使用HugePage。</p><p> HugePages_Free - HugePages_Rsvd部分的内存是浪费的，且不能被其他程序使用。在实际应用中，尽可能让HugePages_Free - HugePages_Rsvd=0</p><h3 id="KVM虚拟机配置hugepages"><a href="#KVM虚拟机配置hugepages" class="headerlink" title="KVM虚拟机配置hugepages"></a>KVM虚拟机配置hugepages</h3><p>方法一：直接启动qemu添加-mem-path参数</p><pre><code>qemu-system-x86_64 -m 2048 -hda /mnt/rhel6.img -mem-path /dev/hugepages</code></pre><p>方法二：通过libvirt给虚拟机的domain字段添加配置配置</p><pre><code>&lt;memoryBacking&gt;&lt;hugepages/&gt;&lt;/memoryBacking&gt;</code></pre><p>libvirt启动虚拟机可能存在以下问题：</p><ol><li>启动虚拟机时无权限访问大页内存的目录<ul><li>问题原因：libvirt用来启动qemu进程的用户没有权限访问挂载的大页内存目录</li><li>解决办法：修改/etc/libvirt/qemu.conf，把user和group都改成root</li></ul></li></ol><p>参考：</p><p><a href="https://libvirt.org/formatdomain.html#elementsMemoryBacking" target="_blank" rel="noopener">https://libvirt.org/formatdomain.html#elementsMemoryBacking</a><br><a href="https://www.mjmwired.net/kernel/Documentation/vm/hugetlbpage.txt" target="_blank" rel="noopener">https://www.mjmwired.net/kernel/Documentation/vm/hugetlbpage.txt</a></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
      <category>kvm</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>kvm</tag>
      
      <tag>hugepage</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="undefinedhello-world/"/>
    <url>hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>